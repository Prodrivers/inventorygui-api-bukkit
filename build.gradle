buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

group 'fr.prodrivers.bukkit'
version '2.0.0-SNAPSHOT'
description 'Advanced Minecraft GUI Library/API, built on top of Bukkit, with Java and Bedrock client transparent support. '

apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    flatDir {
        dirs 'lib'
    }
    mavenLocal()
    mavenCentral()
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots" } //Says snapshots but is the official repo for building plugins against
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://repo.opencollab.dev/maven-snapshots/"}
    maven { url "https://repo.prodrivers.fr/"}
}


compileJava.options.encoding = 'UTF-8'


dependencies {
    implementation group: 'javax.xml.ws', name: 'jaxws-api', version: '2.3.1'
    implementation group: 'org.spigotmc', name: 'spigot-api', version: project.property('spigot.artifact.version')
    implementation group: 'fr.prodrivers.bukkit', name: 'bedrock-texture-lib', version: '1.0.0-SNAPSHOT'
    implementation group: 'org.geysermc.floodgate', name: 'api', version: '2.0-SNAPSHOT'
    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.2'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.2'
    testImplementation group: 'org.javassist', name: 'javassist', version: '3.27.0-GA'
}

task generateApiDocs(type: Javadoc) {
    classpath = project.sourceSets.main.compileClasspath
    source(sourceSets.main.allJava)
    exclude("me/eddie/inventoryguiapi/plugin")
    exclude("me/eddie/inventoryguiapi/language")
    exclude("me/eddie/inventoryguiapi/listeners")
    exclude("me/eddie/inventoryguiapi/examples")

    destinationDir = reporting.file("javadocs")
}

processResources {
    filesMatching('**/plugin.yml') {
        expand(
            'plugin': [
                   'name':  project.property('plugin.name'),
                   'mainClass': project.property('plugin.mainClass'),
                   'author': project.property('plugin.author'),
            ],
            'version': project.version,
            'description': project.description,
            'url': project.property('url'),
            'spigot': [
                'api': [
                    'version': project.property('spigot.api.version')
                ]
            ]
        )
    }
}

jar {
    // Keep jar clean:
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
    exclude 'me/eddie/inventoryguiapi/examples'
}

javadoc {
    options.overview = "src/main/java/overview.html"
}

publishing {
    publications {
        library(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "https://maven.pkg.github.com/Prodrivers/inventorygui-api-bukkit"
            credentials {
                username project.findProperty("prodrivers-repo.username") as String ?: System.getenv("PRODRIVERS_REPO_USERNAME")
                password project.findProperty("prodrivers-repo.token") as String ?: System.getenv("PRODRIVERS_REPO_TOKEN")
            }
        }
    }
}
